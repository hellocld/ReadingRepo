// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadingRepo.DAL.Entities;

#nullable disable

namespace ReadingRepo.DAL.Migrations
{
    [DbContext(typeof(ReadingRepoContext))]
    [Migration("20230703143009_LessExplicitRelationsSeedData")]
    partial class LessExplicitRelationsSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<Guid>("AuthorsAuthorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BooksBookId")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorsAuthorId", "BooksBookId");

                    b.HasIndex("BooksBookId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorsAuthorId = new Guid("84f3f98b-82e5-445f-8e8c-df30afcd7cbf"),
                            BooksBookId = new Guid("c7882c3f-98dc-4553-9835-65872cf9d3a4")
                        },
                        new
                        {
                            AuthorsAuthorId = new Guid("f135fec5-71b8-4be7-8d55-7301d6f1ecab"),
                            BooksBookId = new Guid("c7882c3f-98dc-4553-9835-65872cf9d3a4")
                        });
                });

            modelBuilder.Entity("ReadingRepo.DAL.Entities.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("84f3f98b-82e5-445f-8e8c-df30afcd7cbf"),
                            FirstName = "Groucho",
                            LastName = "Marx"
                        },
                        new
                        {
                            AuthorId = new Guid("f135fec5-71b8-4be7-8d55-7301d6f1ecab"),
                            FirstName = "Harpo",
                            LastName = "Marx"
                        });
                });

            modelBuilder.Entity("ReadingRepo.DAL.Entities.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverImageUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Isbn")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpenLibraryId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("c7882c3f-98dc-4553-9835-65872cf9d3a4"),
                            Pages = 68,
                            PublishDate = new DateTime(1933, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hail Freedonia"
                        });
                });

            modelBuilder.Entity("ReadingRepo.DAL.Entities.ReadingLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BookId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ReadingLogs");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("ReadingRepo.DAL.Entities.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsAuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReadingRepo.DAL.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
